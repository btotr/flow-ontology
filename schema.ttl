@prefix constraint: <https://flow.recipes/ns/schema#> .
@prefix core: <https://flow.recipes/ns/core#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<https://flow.recipes/ns/schema>
  a owl:Ontology ;
.

constraint:RecipeShape
  a sh:NodeShape ;
  sh:targetClass core:Recipe ;
  sh:nodeKind sh:IRI ;
  sh:property [
  	sh:path core:instructions ;
  	constraint:size 20 ;
  	sh:minCount 1 ;
  	sh:severity sh:Info ;
 ] ;
.

constraint:InstructionShape
  a sh:NodeShape ;
  sh:targetClass core:Instruction ;
  sh:nodeKind sh:IRI ;
  sh:closed true ;
  sh:ignoredProperties ( rdf:type core:hasComponentUnit) ;
  sh:property constraint:instructionMustHaveMethod ;
  sh:property constraint:instructionOnlyOneDirections ;
  sh:property constraint:directionsMustBeAString ;
  sh:property constraint:depVariationMustBeInstruction ;
  sh:property constraint:variationMustBeInstruction ;
.

constraint:instructionMustHaveMethod
  a sh:PropertyShape ;
  sh:path core:hasMethod ;
  sh:message "An Instruction must have a method" ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
.

constraint:instructionOnlyOneDirections
  a sh:PropertyShape ;
  sh:path core:directions ;
  sh:message "Only one Instruction is allowed" ;
  sh:maxCount 1 ;
  sh:severity sh:Violation ;
.

constraint:directionsMustBeAString
  a sh:PropertyShape ;
  sh:path core:directions ;
  sh:message "Directions must be a string with a language tag" ;
  sh:datatype rdf:langString ;
  sh:severity sh:Violation ;
.

constraint:depVariationMustBeInstruction 
  a sh:PropertyShape ;
  sh:path core:depVariationInstruction;
  sh:message "dependency must be a intruction" ;
  sh:severity sh:Violation ;
  sh:class core:Instruction ;
.

constraint:variationMustBeInstruction 
  a sh:PropertyShape ;
  sh:path core:variation;
  sh:message "dependency must be a intruction" ;
  sh:severity sh:Violation ;
  sh:class core:Instruction ;
.

constraint:ComponentUnitShape
  a sh:NodeShape ;
  sh:targetClass core:ComponentUnit ;
  sh:nodeKind sh:BlankNodeOrIRI ;
  sh:closed true ;
  sh:ignoredProperties ( rdf:type ) ;
  sh:property constraint:componentUnitOnlyOneWeight ;
  sh:property constraint:componentUnitOnlyOneComponentAddition ;
  sh:property constraint:componentUnitMustHaveComponent ;
  sh:property constraint:weightMustBeAInterger ;
  sh:property constraint:additionMustBeAString ;
.
constraint:componentUnitOnlyOneWeight
  a sh:PropertyShape ;
  sh:path core:weight ;
  sh:message "Only one weight is allowed" ;
  sh:maxCount 1 ;
  sh:severity sh:Violation ;
.

constraint:componentUnitOnlyOneComponentAddition
  a sh:PropertyShape ;
  sh:path core:componentAddition ;
  sh:message "Only one addition is allowed" ;
  sh:maxCount 1 ;
  sh:severity sh:Violation ;
.

constraint:componentUnitMustHaveComponent 
  a sh:PropertyShape ;
  sh:path core:hasComponent ;
  sh:message "Must have one ingredient" ;
  sh:maxCount 1 ;
  sh:minCount 1 ;
  sh:severity sh:Violation ;
.
constraint:additionMustBeAString
  a sh:PropertyShape ;
  sh:path core:componentAddition ;
  sh:message "Addition must be a string" ;
  sh:or (
     [sh:datatype xsd:string]
     [sh:datatype rdf:langString]
   );
  sh:severity sh:Violation ;
.
 
constraint:weightMustBeAInterger
  a sh:PropertyShape ;
  sh:path core:weight ;
  sh:message "weight must be a integer" ;
  sh:datatype xsd:integer ;
  sh:severity sh:Violation ;
.

constraint:MaxSizeListConstraintComponent
 a sh:ConstraintComponent ;
 rdfs:label "Max list constraint component" ;
 sh:parameter [
  sh:path constraint:size ;
  sh:name "Size of list" ;
  sh:description "The size of the list" ;
 ] ;
 sh:labelTemplate "Size of values: \"{$size}\"" ;
 sh:propertyValidator [
  a sh:SPARQLSelectValidator ;
  sh:message "{$path} try to create {?size}. Currently: {?count}" ;
  sh:prefixes [ sh:declare [
    sh:prefix "rdf" ;
    sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   ]
  ] ;
  sh:select """
   SELECT $this ?value $count WHERE {
     $this $path ?value .
     { { SELECT $this ?value (COUNT(?member) AS ?count) $size WHERE {
          ?value rdf:rest*/rdf:first ?member
       } GROUP BY $this ?value $size
      }
     FILTER (!isBlank(?value) || ?count > $size)
    }
  }"""
 ]
