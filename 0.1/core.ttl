# baseURI: http://flow.recipes/ns/core
# imports: http://flow.recipes/ns/scheme#
# prefix: flow

@prefix : <http://flow.recipes/ns/core#> .
@prefix flow: <http://flow.recipes/ns/core#> .
@prefix fs: <http://flow.recipes/ns/scheme#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://flow.recipes/ns/core>
  a owl:Ontology ;
  rdfs:label "Flow recipes core ontology" ;
  owl:imports fs: ;
.
flow:Case
  a owl:Class ;
  rdfs:label "Case" ;
  rdfs:subClassOf owl:Thing ;
.
flow:Component
  a owl:Class ;
  rdfs:label "Component" ;
  rdfs:subClassOf owl:Thing ;
.
flow:ComponentUnit
  a owl:Class ;
  rdfs:subClassOf owl:Thing ;
.
flow:Ingredient
  a owl:Class ;
  rdfs:comment "an ingredient used for a particular instruction." ;
  rdfs:label "Ingredient"@en ;
  rdfs:subClassOf flow:Component ;
  owl:disjointWith flow:Method ;
  owl:equivalentClass [
      a owl:Class ;
      owl:equivalentClass flow:Ingredient ;
      owl:intersectionOf (
          skos:Concept
          [
            a owl:Restriction ;
            owl:hasValue fs:ingredientsScheme ;
            owl:onProperty skos:inScheme ;
          ]
        ) ;
    ] ;
.
flow:Instruction
  a owl:Class ;
  rdfs:label "Instruction" ;
  rdfs:subClassOf owl:Thing ;
  rdfs:subClassOf [
      a owl:Restriction ;
      owl:minCardinality 1 ;
      owl:onProperty flow:hasMethod ;
    ] ;
.
flow:Method
  a owl:Class ;
  rdfs:label "Method" ;
  rdfs:subClassOf owl:Thing ;
  owl:disjointWith flow:Ingredient ;
  owl:equivalentClass [
      a owl:Class ;
      owl:equivalentClass flow:Method ;
      owl:intersectionOf (
          skos:Concept
          [
            a owl:Restriction ;
            owl:hasValue fs:methodsScheme ;
            owl:onProperty skos:inScheme ;
          ]
        ) ;
    ] ;
.
flow:Recipe
  a owl:Class ;
  rdfs:comment "A recipe could stand on his own or act as an ingredient for another recipe." ;
  rdfs:label "Recipe" ;
  rdfs:subClassOf flow:Component ;
.
flow:componentAddition
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  rdfs:domain flow:ComponentUnit ;
  rdfs:label "component addition" ;
  rdfs:range xsd:string ;
.
flow:depVariationInstruction
  a owl:ObjectProperty ;
  rdfs:comment "instruction depends on some variation of another instruction" ;
  rdfs:domain flow:Instruction ;
  rdfs:range flow:Instruction ;
.
flow:directions
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  rdfs:domain flow:Instruction ;
  rdfs:label "directions" ;
  rdfs:range xsd:string ;
.
flow:hasCase
  a owl:ObjectProperty ;
  rdfs:domain [
      a owl:Class ;
      owl:unionOf (
          flow:Case
          flow:Instruction
        ) ;
    ] ;
  rdfs:label "hasCase"@en ;
  rdfs:range flow:Case ;
.
flow:hasComponent
  a owl:ObjectProperty ;
  rdfs:domain flow:ComponentUnit ;
  rdfs:label "has component" ;
  rdfs:range flow:Component ;
.
flow:hasComponentUnit
  a owl:ObjectProperty ;
  rdfs:domain flow:Instruction ;
  rdfs:label "has component unit" ;
  rdfs:range flow:ComponentUnit ;
.
flow:hasMethod
  a owl:FunctionalProperty ;
  a owl:ObjectProperty ;
  rdfs:domain flow:Instruction ;
  rdfs:label "hasMethod"@en ;
  rdfs:range flow:Method ;
.
flow:instructions
  a rdf:Property ;
  rdfs:domain flow:Recipe ;
.
flow:weight
  a owl:DatatypeProperty ;
  a owl:FunctionalProperty ;
  rdfs:domain flow:ComponentUnit ;
  rdfs:label "weight" ;
  rdfs:range xsd:integer ;
.
rdfs:variation
  a owl:ObjectProperty ;
  a owl:SymmetricProperty ;
  rdfs:comment "A variation of the instruction. Those instructions must be interchangeable. For example bread shape batard and bread shape boulle instruction" ;
  rdfs:domain flow:Instruction ;
  rdfs:range flow:Instruction ;
.
