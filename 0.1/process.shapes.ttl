# baseURI: http://flow.recipes/ns/process
# imports: http://datashapes.org/dash
# imports: http://flow.recipes/ns/core
# imports: http://www.w3.org/ns/shacl#
# prefix: process

@prefix core: <http://flow.recipes/ns/core#> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix process: <http://flow.recipes/ns/process#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://flow.recipes/ns/process>
  a owl:Ontology ;
  owl:imports <http://datashapes.org/dash> ;
  owl:imports <http://flow.recipes/ns/core> ;
  owl:imports sh: ;
  owl:versionInfo "Created with TopBraid Composer" ;
  sh:declare [
      sh:namespace "http://flow.recipes/ns/core#"^^xsd:anyURI ;
      sh:prefix "core" ;
    ] ;
  sh:declare [
      sh:namespace "http://flow.recipes/ns/process#"^^xsd:anyURI ;
      sh:prefix "process" ;
    ] ;
  sh:entailment sh:Rules ;
.
process:Input
  a owl:Class ;
.
process:Process
  a owl:Class ;
  a sh:NodeShape ;
  owl:sameAs core:Method ;
  sh:rule process:inputRule ;
  sh:rule process:endProcessRule ;
  sh:rule process:inputConnectionRule ;
  sh:rule process:processConnectionRule ;
  sh:rule process:startProcessRule ;
.
process:startProcess
  a process:Process ;
  a owl:NamedIndividual ;
.
process:endProcess
  a process:Process ;
  a owl:NamedIndividual ;
.
process:endProcessRule
  a sh:SPARQLRule ;
  rdfs:label "add a end process" ;
  sh:construct """CONSTRUCT {
	 $this process:processConnection process:endProcess .
  } WHERE {
	$this ^core:hasMethod ?instruction .
	FILTER NOT EXISTS {?instruction ^core:depVariationInstruction ?depInstruction . }
  }""" ;
  sh:prefixes [
      sh:declare [
          sh:namespace "http://flow.recipes/ns/core#"^^xsd:anyURI ;
          sh:prefix "core" ;
        ] ;
    ] ;
  sh:prefixes [
      sh:declare [
          sh:namespace "http://flow.recipes/ns/process#"^^xsd:anyURI ;
          sh:prefix "process" ;
        ] ;
    ] ;
.
process:inputConnection
  a owl:ObjectProperty ;
.
process:inputConnectionRule
  a sh:SPARQLRule ;
  sh:order 2 ; 
  rdfs:label "add a input connection if there is a  component unit" ;
  sh:construct """CONSTRUCT {
	$this process:inputConnection ?input .
  } WHERE {
	$this ^core:hasMethod ?instruction .
	?instruction core:hasComponentUnit ?componentUnit .
	?componentUnit process:partOfInput ?input .
  }""" ;
  sh:prefixes [
      sh:declare [
          sh:namespace "http://flow.recipes/ns/core#"^^xsd:anyURI ;
          sh:prefix "core" ;
        ] ;
    ] ;
  sh:prefixes [
      sh:declare [
          sh:namespace "http://flow.recipes/ns/process#"^^xsd:anyURI ;
          sh:prefix "process" ;
        ] ;
    ] ;
.
process:partOfInput
  a owl:ObjectProperty ;
.
process:processConnection
  a owl:ObjectProperty ;
.
process:processConnectionRule
  a sh:SPARQLRule ;
  rdfs:label "add a process connection if there is a  process which depends on the focus node" ;
  sh:construct """CONSTRUCT {
	$this process:processConnection ?process .
  } WHERE {
	?process ^core:hasMethod ?instruction .
	?instruction core:depVariationInstruction ?focusNodeInstruction .
	?focusNodeInstruction core:hasMethod $this .
  }""" ;
  sh:prefixes [
      sh:declare [
          sh:namespace "http://flow.recipes/ns/core#"^^xsd:anyURI ;
          sh:prefix "core" ;
        ] ;
    ] ;
  sh:prefixes [
      sh:declare [
          sh:namespace "http://flow.recipes/ns/process#"^^xsd:anyURI ;
          sh:prefix "process" ;
        ] ;
    ] ;
.
process:startProcessRule
  a sh:SPARQLRule ;
  rdfs:label "add a start process" ;
  sh:construct """CONSTRUCT {
	 process:startProcess process:processConnection $this .
  } WHERE {
	$this ^core:hasMethod ?instruction .
	FILTER NOT EXISTS {?instruction core:depVariationInstruction ?depInstruction . }
  }""" ;
  sh:prefixes [
      sh:declare [
          sh:namespace "http://flow.recipes/ns/core#"^^xsd:anyURI ;
          sh:prefix "core" ;
        ] ;
    ] ;
  sh:prefixes [
      sh:declare [
          sh:namespace "http://flow.recipes/ns/process#"^^xsd:anyURI ;
          sh:prefix "process" ;
        ] ;
    ] ;
.
process:inputRule
  a sh:SPARQLRule ;
  sh:order 2 ; 
  rdfs:label "add an input process" ;
  sh:construct """CONSTRUCT {
	  ?componentUnit process:partOfInput ?input .
	  ?input rdf:type process:Input .
  } WHERE {
  	$this ^core:hasMethod ?instruction .
	?instruction core:hasComponentUnit ?componentUnit .
	bind (URI(concat("http://flow.recipes/ns/process/#",STRUUID())) as ?input)
  }""" ;
  sh:prefixes [
      sh:declare [
          sh:namespace "http://flow.recipes/ns/core#"^^xsd:anyURI ;
          sh:prefix "core" ;
        ] ;
    ] ;
  sh:prefixes [
      sh:declare [
          sh:namespace "http://flow.recipes/ns/process#"^^xsd:anyURI ;
          sh:prefix "process" ;
        ] ;
    ] ;
    sh:prefixes [ sh:declare [
    sh:prefix "rdf" ;
    sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   ]
  ] ;
.


